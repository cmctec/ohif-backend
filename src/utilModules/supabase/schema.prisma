generator client {
  provider = "prisma-client-js"
  output   = "../../../generated/supabase"
}

datasource db {
  provider = "postgres"
  url      = env("SUPABASE_DB_URL")
}

model appointment {
  created_at       DateTime?      @default(now()) @db.Timestamptz(6)
  patient_iin      String?
  patient_fio      String?
  appointment_date DateTime?      @db.Timestamptz(6)
  referrer         String?
  status           String?        @db.VarChar
  link_conclusion  String?
  mis_id           String?        @db.VarChar
  modified_at      DateTime?      @db.Timestamp(6)
  service_name     String?
  service_code     String?
  id               BigInt         @id(map: "appointment_duplicate_pkey") @default(autoincrement())
  senderMoID       String?
  senderMoName     String?
  senderFpName     String?
  senderDocPostID  String?
  study_id         BigInt?
  serviceCount     BigInt?
  conclusion_id    BigInt?
  organization_id  BigInt?
  conclusion       conclusion?    @relation(fields: [conclusion_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations    organizations? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  studies          studies?       @relation(fields: [study_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model conclusion {
  id               BigInt        @id @default(autoincrement())
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  modified_at      DateTime?     @db.Timestamptz(6)
  conclusion_text  String?
  conclusion_image String?
  ohif_id          String
  doctor_iin       String?
  doctor_fullname  String?
  conclusion_url   String?
  study_id         BigInt?
  appointment      appointment[]
  studies          studies?      @relation(fields: [study_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model modalities {
  id             BigInt           @id @default(autoincrement())
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  name           String?          @db.VarChar
  modality_role  modality_role[]
  modality_study modality_study[]
}

model modality_role {
  id              BigInt         @id @default(autoincrement())
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  modality_id     BigInt?
  role_id         BigInt?
  organization_id BigInt?
  modalities      modalities?    @relation(fields: [modality_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations   organizations? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  roles           roles?         @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model modality_study {
  id          BigInt     @id @default(autoincrement())
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  study_id    BigInt
  modality_id BigInt
  modalities  modalities @relation(fields: [modality_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  studies     studies    @relation(fields: [study_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization_user {
  id              BigInt         @id @default(autoincrement())
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  organization_id BigInt?
  user_id         BigInt?
  organizations   organizations? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users           users?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organizations {
  id                BigInt              @id @default(autoincrement())
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  name              String?             @db.VarChar
  bin               String?             @db.VarChar
  mis_id            BigInt?
  mis_username      String?             @db.VarChar
  mis_password      String?             @db.VarChar
  institution_name  String?             @db.VarChar
  service_code      String?
  mis_url           String?
  appointment       appointment[]
  modality_role     modality_role[]
  organization_user organization_user[]
  orthanc_config    orthanc_config[]
  price             price[]
  studies           studies[]
}

model patients {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  iin        String
  firstname  String?
  lastname   String?
  surname    String?
  bdate      DateTime? @db.Date
  region     String?
  gender     String?
  phone      String?
  fullname   String?
  email      String?
  studies    studies[]
}

model role_user {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  role_id    BigInt?
  user_id    BigInt?
  roles      roles?    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  id                  BigInt          @id @default(autoincrement())
  created_at          DateTime?       @default(now()) @db.Timestamptz(6)
  slug                String          @db.VarChar
  name                String?         @db.VarChar
  limited_to_modality Boolean?
  modality_role       modality_role[]
  role_user           role_user[]
}

model share_dicom_archive {
  id                 BigInt    @id @default(autoincrement())
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  study_id           BigInt?
  token              String?
  otp_code           String?
  updated_at         DateTime? @db.Timestamptz(6)
  doctor_iin         String?
  status             String?   @db.VarChar
  verify_status      Boolean?
  number_of_attempts Int?      @db.SmallInt
  studies            studies?  @relation(fields: [study_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model studies {
  id                    BigInt                @id @default(autoincrement())
  created_at            DateTime?             @default(now()) @db.Timestamptz(6)
  ohif_id               String?
  patient_id            BigInt?
  description           String?
  date                  String?               @db.VarChar
  access_number         String?               @db.VarChar
  status                String?               @db.VarChar
  SMS_status            String?               @db.VarChar
  incorrectIIN          Boolean?
  UUID_whatsapp         String?               @db.VarChar
  anonymized_ohif_id    String?               @db.VarChar
  archive_url           String?
  organization_id       BigInt?
  service_count         BigInt?
  service_code          String?
  uploaded_to_the_cloud Boolean?
  appointment           appointment[]
  conclusion            conclusion[]
  modality_study        modality_study[]
  share_dicom_archive   share_dicom_archive[]
  organizations         organizations?        @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  patients              patients?             @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                BigInt              @id @default(autoincrement())
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  username          String              @db.VarChar
  fullname          String?             @db.VarChar
  stamps_url        String?             @db.VarChar
  organization_user organization_user[]
  role_user         role_user[]
}

model price {
  id             BigInt         @id @default(autoincrement())
  price          Decimal?       @db.Decimal
  service_id     BigInt?
  orgaization_id BigInt?
  organizations  organizations? @relation(fields: [orgaization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  services       services?      @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model services {
  id              BigInt    @id(map: "services2_pkey") @default(autoincrement())
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  service_code    String?   @unique(map: "services2_service_code_key")
  codename        String?   @unique(map: "services2_codename_key")
  service_name    String?
  dcm_description String?
  price           price[]
}

model orthanc_config {
  id              BigInt         @id @default(autoincrement())
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  organization_id BigInt?
  dicom_aet       String?
  dicom_hostname  String?
  dicom_port      String?        @db.VarChar
  type            String?        @db.VarChar
  organizations   organizations? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment_type {
  id               BigInt  @id @default(autoincrement())
  payment_type     String?
  payment_type_rus String?
}
